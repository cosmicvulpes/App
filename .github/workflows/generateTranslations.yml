name: Generate static translations

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  generateTranslations:
    runs-on: ubuntu-latest
    steps:
      # v4
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: Setup Node
        uses: ./.github/actions/composite/setupNode

      # We always run dry-run the script to verify that it still works.
      # The generateTranslations script runs with ts-node, which can't handle Flow
      # (the specialized JS that React Native is written in).
      # Therefore, adding an import in the wrong place could break the script, even if you didn't modify the script.
      - name: Run full generateTranslations dry run
        run: npx ts-node ./scripts/generateTranslations.ts --dry-run

      - name: Explain failure
        if: failure()
        run: |
          echo '::error:: üò¶ Something you did broke scripts/generateTranslations.ts. Most likely, this means you added an import that caused react-native to be directly or indirectly imported into the script.'
          exit 1

      - name: Check if English translations were modified
        id: check-en-changes
        run: |
          if [[ "${{ github.event.action }}" == "opened" ]]; then
            # For newly opened PRs, check if en.ts was changed in the entire PR
            echo "üÜï PR was just opened - checking entire PR for en.ts changes"
            if gh pr diff ${{ github.event.pull_request.number }} --name-only | grep -q "^src/languages/en\.ts$"; then
              echo "EN_CHANGED=true" >> "$GITHUB_OUTPUT"
              echo "‚úÖ English translations were modified in this PR - will generate translations"
            else
              echo "EN_CHANGED=false" >> "$GITHUB_OUTPUT"
              echo "‚è≠Ô∏è English translations were not modified in this PR - skipping translation generation"
            fi
          else
            # For synchronize events, only check the new commits that were just pushed
            echo "üîÑ PR was updated - checking only the new commits for en.ts changes"
            if git diff --name-only ${{ github.event.before }}..${{ github.event.after }} | grep -q "^src/languages/en\.ts$"; then
              echo "EN_CHANGED=true" >> "$GITHUB_OUTPUT"
              echo "‚úÖ English translations were modified in the new commits - will generate translations"
            else
              echo "EN_CHANGED=false" >> "$GITHUB_OUTPUT"
              echo "‚è≠Ô∏è English translations were not modified in the new commits - skipping translation generation"
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run generateTranslations for added translations
        if: steps.check-en-changes.outputs.EN_CHANGED == 'true'
        run: npx ts-node ./scripts/generateTranslations.ts --compare-ref=main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.PROPOSAL_POLICE_API_KEY }}

      - name: Post diff in PR as a comment
        if: steps.check-en-changes.outputs.EN_CHANGED == 'true'
        run: |
          # Check if there are any changes after running generateTranslations
          if git diff --quiet HEAD; then
            echo "‚úÖ No changes detected"
          else
            echo "ü¶ú Polyglot Parrot detected changes! ü¶ú"

            # Find and hide any existing Polyglot Parrot comments
            EXISTING_COMMENTS="$(gh pr view ${{ github.event.pull_request.number }} --json comments --jq '.comments[] | select(.body | startswith("## ü¶ú Polyglot Parrot! ü¶ú")) | .id')"
            if [[ -n "$EXISTING_COMMENTS" ]]; then
              echo "Found existing Polyglot Parrot comment(s), hiding as outdated..."
              echo "$EXISTING_COMMENTS" | while read -r comment_id; do
                # shellcheck disable=SC2016
                gh api graphql -f query='
                  mutation($commentId: ID!) {
                    minimizeComment(input: {
                      subjectId: $commentId,
                      classifier: OUTDATED
                    }) {
                      minimizedComment {
                        isMinimized
                      }
                    }
                  }' -f commentId="$comment_id"
              done
            fi

            # Post the new comment
            COMMENT_BODY="## ü¶ú Polyglot Parrot! ü¶ú

            Squawk! Looks like you added some shiny new English strings. Allow me to parrot them back to you in other tongues:

            \`\`\`diff
            $(git diff HEAD)
            \`\`\`

            _Note:_ You can apply these changes to your branch by copying them to your clipboard, then running \`pbpaste | git apply\` üòâ"
            gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT_BODY"
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}
